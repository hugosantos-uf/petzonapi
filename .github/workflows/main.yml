# Nome do seu workflow
name: Deploy Petzon API to EC2

# Gatilho: Este workflow roda a cada push na branch 'main'
on:
  push:
    branches: [ main ]

# Tarefas (jobs) que o workflow irá executar
jobs:
  build-and-deploy:
    # O sistema operacional que o runner do GitHub vai usar
    runs-on: ubuntu-latest

    steps:
    # 1. Baixa o seu código do repositório para o runner
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Configura o ambiente Java (JDK)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Executa o build com Maven (ele baixa as dependências e gera o .jar)
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # 4. Copia o .jar para o EC2 e reinicia o serviço
    - name: Deploy to EC2
      run: |
        # Cria um arquivo temporário com a chave SSH a partir do secret
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key && chmod 600 private_key

        # Comando SCP para copiar o .jar para o EC2
        # Certifique-se que o caminho do .jar gerado e o caminho de destino estão corretos
        scp -o StrictHostKeyChecking=no -i private_key \
          target/petzonapi-0.0.1-SNAPSHOT.jar \
          ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ec2-user/

        # Comando SSH para reiniciar o serviço systemd no EC2
        ssh -o StrictHostKeyChecking=no -i private_key \
          ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} \
          "sudo systemctl restart minha-app.service"
